from tkinter import *
from tkinter import messagebox
import os
import sqlite3

def master_screen():
    global root 
    root = Tk()  
    root.geometry("750x460")
    root.title("Gila Breath Camp - Account Login")

    label_master = Label(root, text = "Welcome to Gila Breath Camp! Login/Register to Continue :)", font = ("Calibri", 20), padx = 90, pady = 70, bg = "Grey")
    label_master.pack()

    frame_master = LabelFrame(root, text = "Make your selection", padx = 30, pady = 30, bg = "Grey")
    frame_master.pack()
    
    Button(frame_master, text="Login", height="5", width="85", command = login).pack(padx = 50, pady = 8) 
    Button(frame_master, text="Register", height="5", width="85", command = register).pack(padx = 50, pady = 8)

    root.mainloop()

    
def register():
    
    global register_screen
    global username
    global password

    register_screen = Toplevel(root)
    register_screen.title("Register")
    register_screen.geometry("300x250")

    username = StringVar()
    password = StringVar()

    label_1 = Label(register_screen, text = "Registration ", font = ("Calibri", 14), padx = 15, pady = 20)
    label_1.pack()
    
    frame = LabelFrame(register_screen, text = "Please enter details below", padx = 5, pady = 5)
    frame.pack(padx = 10, pady = 10)
    
    user_label  = Label(frame, text='Username * ', font = ("Calibri", 12)).grid(row=0, sticky=W)
    username_entry = Entry(frame, textvariable=username, width = 20)
    username_entry.grid(row = 0, column =1, sticky = W)
   
    password_lable = Label(frame, text="Password * ", font = ("Calibri", 12)).grid(row=1, sticky=W)
    password_entry = Entry(frame, textvariable=password, width = 20, show='*')
    password_entry.grid(row=1, column =1, sticky = W)
    
    Label(register_screen, text="").pack()
    Button(register_screen, text="Confirm", width=10, height=1, command= new_user).pack()

    
def new_user():

    db = sqlite3.connect('users.db')
    c = db.cursor()
    
    table1 = """ CREATE TABLE if not exists user
            (username TEXT NOT NULL PRIMARY KEY,password TEX NOT NULL)
            """
    c.execute(table1)
    db.commit()
    
    username_info = username.get()
    password_info = password.get()
    find_user = ('SELECT username FROM user WHERE username = ?')
    c.execute(find_user,[(username_info)])  
    
    if c.fetchall():
        messagebox.showinfo('Error!','Username Taken Try a Diffrent One.')
        
    elif (username_info=="" or password_info==""):
        messagebox.showinfo("Error!","Fields cannot be empty!")
        
    else:
        insert = 'INSERT INTO user(username,password) VALUES(?,?)'
        c.execute(insert,[(username_info),(password_info)])
        db.commit()
        messagebox.showinfo("Success!","You registered successfully!")
        register_screen.destroy()
    

def login():
    global login_screen
    global username_verify
    global password_verify
    
    login_screen = Toplevel(root)
    login_screen.title("Login")
    login_screen.geometry("300x250")

    username_verify = StringVar()
    password_verify = StringVar()
  
    label_1 = Label(login_screen, text = "Login ", font = ("Calibri", 14), padx = 15, pady = 20)
    label_1.pack()
    
    frame = LabelFrame(login_screen, text = "Please enter your crendential below", padx = 5, pady = 5)
    frame.pack(padx = 10, pady = 10)
    
    user_label  = Label(frame, text='Username * ', font = ("Calibri", 12)).grid(row=0, sticky=W)
    username_entry_login = Entry(frame, width = 20, textvariable = username_verify)
    username_entry_login.grid(row = 0, column =1, sticky = W)
   
    password_lable = Label(frame, text="Password * ", font = ("Calibri", 12)).grid(row=1, sticky=W)
    password_entry_login = Entry(frame, width = 20, show='*', textvariable = password_verify)
    password_entry_login.grid(row=1, column =1, sticky = W)
    
    Label(login_screen, text="").pack()  
    Button(login_screen, text="Confirm", width=10, height=1, command=login_user).pack()


def login_user():
    
    username_verify_info = username_verify.get()
    password_verify_info = password_verify.get()
    
    #Establish Connection
    db = sqlite3.connect('users.db')
    c = db.cursor()

    #Find user If there is any take proper action
    find_user = ('SELECT * FROM user WHERE username = ? and password = ?')
    c.execute(find_user,[(username_verify_info),(password_verify_info)])
    result = c.fetchall()
    
    if result:
        messagebox.showinfo("Success!","You have Login successfully!")
        login_screen.destroy()
        root.destroy()
        build_Application()
        
    elif (username_verify_info=="admin" or password_verify_info=="admin"):
        messagebox.showinfo("Success!","Clerk Login successfull!")
        login_screen.destroy()
        root.destroy()
        clerk_application()
        
    elif (username_verify_info=="" or password_verify_info==""):
        messagebox.showinfo("Error!","Fields cannot be empty!")
        
    else:
        messagebox.showinfo("Error!","Incorrect user or password")


def build_CustomerDash():
    '''
    a
    '''

    root = Tk()
    #maybe you have to create your own variable for Tk()
    root.geometry('500x500')
    root.title('Customer Dashboard')

    load=Image.open('Users\devin\Pictures\Tatooart\Tatoo.jpg')
    render= ImageTk.PhotoImage(load)
    img=Label(root, image= render)
    img.place(x=0, y=0)


    CustDash_frame = LabelFrame(root, text='Dashboard', font=('Modern No. 20', 20))
    CustDash_frame.grid(row=1, column=3)

    def logout():
        root.destroy()

    def info_page():
        build_Application()
    def status():
        top=Toplevel()
        top.title('Your Status')


    Apply_button = Button(root, text='Apply Here', relief='ridge', bd=5, height=3, width=10, padx=2, pady=4, command=info_page)
    Apply_button.place(x=150, y=100)

    logout_but = Button(root, text='logout', relief='ridge', bd=5, height=3, width=10, padx=2, pady=4, command=logout)
    logout_but.place(x=265, y=100)

# figure out how to apply database to results-------------------
    frame_1=LabelFrame(root, text='Number of campers needed')
    frame_1.place(x=175, y=250)

    inside=Label(frame_1, text='Hi there pal')
    inside.pack()


build_CustomerDash()

root.mainloop()
